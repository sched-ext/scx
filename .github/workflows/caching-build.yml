name: build-and-test

on:
  push:
  pull_request:
  merge_group:

jobs:
  build-kernels:
    uses: ./.github/workflows/build-kernels.yml
    secrets: inherit

  rust-tests:
    runs-on: ${{ github.repository_owner == 'sched-ext' && fromJSON('[ "self-hosted", "linux", "x64" ]') || 'ubuntu-latest' }}
    needs: build-kernels
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: ./.github/actions/install-nix
        with:
          cachix-auth-token: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Load kernel
        run: |
          echo "KERNEL_STORE_PATH=$(nix build --no-link --print-out-paths ./.github/include#'kernel_sched_ext/for-next')" >> $GITHUB_ENV
          echo "KERNEL_HEADERS_STORE_PATH=$(nix build --no-link --print-out-paths ./.github/include#'kernel_sched_ext/for-next'.headers)" >> $GITHUB_ENV

      - name: Format
        run: nix run ./.github/include#ci -- format

      - name: Build
        run: nix run ./.github/include#ci -- build

      - name: Clippy
        run: nix run ./.github/include#ci -- clippy

      - name: Test
        run: nix run ./.github/include#ci -- test

  integration-test:
    uses: ./.github/workflows/integration-tests.yml
    needs: build-kernels
    secrets: inherit

  pages:
    runs-on: ubuntu-24.04
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write  # To push a branch
      pages: write  # To push to a GitHub Pages site
      id-token: write # To update the deployment status
    steps:
      # prevent cache permission errors
      - run: sudo chown root /usr/bin/tar && sudo chmod u+s /usr/bin/tar
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/install-deps-action
      - name: Build Book and Linux Docs
        run: |
          cd / && rustup component add rustfmt && cd $OLDPWD
          RUSTDOCFLAGS="--enable-index-page -Zunstable-options" cargo +nightly doc --workspace --no-deps --bins --lib --examples --document-private-items
          sudo apt install build-essential graphviz sphinx-doc python3-sphinx-rtd-theme texlive-latex-recommended python3-yaml -y
          cargo install htmlq
          git clone --single-branch -b for-next --depth 1 https://git.kernel.org/pub/scm/linux/kernel/git/tj/sched_ext.git linux
          cd linux
          make DOCS_THEME=sphinx_rtd_theme SPHINXDIRS=scheduler htmldocs
          make DOCS_THEME=sphinx_rtd_theme SPHINXDIRS=bpf htmldocs
          cd ..
          cp -a linux/Documentation/output/scheduler target/doc/
          cp -a linux/Documentation/output/bpf target/doc/
          sed -i 's%<li><a href="server/index.html">server</a></li>%<li><a href="server/index.html">server</a></li><li><a href="scheduler/sched-ext.html">Kernel Sched Ext Docs</a></li><li><a href="bpf/helpers.html">Kernel Bpf Helpers Docs</a></li>%' target/doc/index.html
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'target/doc'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
